{{- if and .Values.enableAES .Values.servicePreview.enabled }}
{{- if .Values.scope.singleNamespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/service-account.name: traffic-agent
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "ambassador.rbacName" . }}
subjects:
  - name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
{{- else }}
## TODO: If we install Service Preview cluster-wide, this means we can't use the 'traffic-agent' ServiceAccount
## as it does not exist in every namespace. We must instead grant new Roles to all ServiceAccounts (cluster-wide).
## We must revisit this ClusterRole (possibly even create a new one), with the very minimal set of permissions required.
## Even better if it can be read-only.
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
  labels:
    app.kubernetes.io/name: {{ .Values.servicePreview.trafficAgent.serviceAccountName }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "ambassador.rbacName" . }}
subjects:
  - name: system:serviceaccounts
    kind: Group
    apiGroup: rbac.authorization.k8s.io
{{- end }}
{{- end }}